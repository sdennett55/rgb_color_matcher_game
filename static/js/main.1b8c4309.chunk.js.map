{"version":3,"sources":["RightArrow.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["RightArrow","className","xmlns","viewBox","d","getRandomValue","max","min","Math","floor","random","getRandomColor","r","g","b","formatColor","randomColor","backgroundColor","initialRandomColor","App","useState","rgb","setRgb","color","setColor","setRandomColor","useEffect","JSON","stringify","alert","handleColorChange","e","number","prev","marginOfError","abs","hasReachedMarginOfError","id","type","name","checked","onChange","htmlFor","onClick","style","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b8c4309.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction RightArrow({className}: {className: string}) {\r\n  return (\r\n    <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 132 512 248\">\r\n      <path d=\"M506.134 241.843l-.018-.019-104.504-104c-7.829-7.791-20.492-7.762-28.285.068-7.792 7.829-7.762 20.492.067 28.284L443.558 236H20c-11.046 0-20 8.954-20 20s8.954 20 20 20h423.557l-70.162 69.824c-7.829 7.792-7.859 20.455-.067 28.284 7.793 7.831 20.457 7.858 28.285.068l104.504-104 .018-.019c7.833-7.818 7.808-20.522-.001-28.314z\" />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default RightArrow;","import React, { useState, useEffect } from 'react';\nimport RightArrow from './RightArrow';\n// import useNoSleep from \"use-no-sleep\";\nimport './App.css';\n\ninterface RGBColor {\n  r: number,\n  g: number,\n  b: number,\n}\n\nfunction getRandomValue(max: number, min: number) {\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\nfunction getRandomColor() {\n  return {\n    r: getRandomValue(0, 255),\n    g: getRandomValue(0, 255),\n    b: getRandomValue(0, 255),\n  }\n}\n\nfunction formatColor(randomColor: RGBColor) {\n  const { r, g, b } = randomColor;\n  return {\n    backgroundColor: `rgb(${r}, ${g}, ${b})`\n  }\n}\n\nconst initialRandomColor = getRandomColor();\n\nfunction App() {\n  const [rgb, setRgb] = useState({\n    r: 50,\n    g: 125,\n    b: 150,\n  });\n\n  const [color, setColor] = useState('r' as keyof RGBColor);\n\n  const [randomColor, setRandomColor] = useState(initialRandomColor);\n\n  // useNoSleep(true);\n\n  useEffect(() => {\n    if (JSON.stringify(rgb) === JSON.stringify(randomColor)) {\n      alert('you did it!');\n\n      setRandomColor(getRandomColor());\n    }\n  }, [rgb])\n\n  const { r, g, b } = rgb;\n\n  function handleColorChange(e: React.MouseEvent, color: keyof RGBColor, number: number) {\n    setRgb((prev) => {\n      if (prev[color] + number > 255) {\n        return {\n          ...prev,\n          [color]: 255\n        }\n      } else if (prev[color] + number < 0) {\n        return {\n          ...prev,\n          [color]: 0\n        }\n      }\n\n      return {\n        ...prev,\n        [color]: prev[color] + number\n      }\n    })\n  }\n\n  const marginOfError = Math.abs(rgb.r - randomColor.r) + Math.abs(rgb.g - randomColor.g) + Math.abs(rgb.b - randomColor.b);\n\n  const hasReachedMarginOfError: boolean = marginOfError < 100 && marginOfError % 10 === 0;\n\n  return (\n    <div className=\"ColorGame\">\n      <h2 className=\"ColorGame-title\">RGB Color Matcher</h2>\n      <div className=\"ColorGame-colorOptions\">\n        <input id=\"red\" type=\"radio\" name=\"colorSelect\" checked={color === 'r'} onChange={() => setColor('r')} className=\"ColorGame-button ColorGame-button--red\" />\n        <label className=\"ColorGame-label ColorGame-label--red\" htmlFor=\"red\"><span className=\"ColorGame-hiddenText\">Red</span></label>\n        <input id=\"green\" type=\"radio\" name=\"colorSelect\" checked={color === 'g'} onChange={() => setColor('g')} className=\"ColorGame-button ColorGame-button--green\" />\n        <label className=\"ColorGame-label ColorGame-label--green\" htmlFor=\"green\"><span className=\"ColorGame-hiddenText\">Green</span></label>\n        <input id=\"blue\" type=\"radio\" name=\"colorSelect\" checked={color === 'b'} onChange={() => setColor('b')} className=\"ColorGame-button ColorGame-button--blue\" />\n        <label className=\"ColorGame-label ColorGame-label--blue\" htmlFor=\"blue\"><span className=\"ColorGame-hiddenText\">Blue</span></label>\n      </div>\n      <div className=\"ColorGame-buttonWrap\">\n        <button className=\"ColorGame-buttonHalf\" onClick={(e) => handleColorChange(e, color, -10)}>-10</button>\n        <button className=\"ColorGame-buttonHalf\" onClick={(e) => handleColorChange(e, color, -5)}>-5</button>\n        <button className=\"ColorGame-buttonHalf\" onClick={(e) => handleColorChange(e, color, -1)}>-1</button>\n        <button className=\"ColorGame-buttonHalf\" onClick={(e) => handleColorChange(e, color, 1)}>+1</button>\n        <button className=\"ColorGame-buttonHalf\" onClick={(e) => handleColorChange(e, color, 5)}>+5</button>\n        <button className=\"ColorGame-buttonHalf\" onClick={(e) => handleColorChange(e, color, 10)}>+10</button>\n      </div>\n      <div className=\"ColorGame-colorsWrap\">\n        <div className=\"ColorGame-previewColor\" style={formatColor(rgb)}>\n          <div className=\"ColorGame-centeredText\">\n            <span className=\"ColorGame-text\">\n              <p>r: <span className=\"ColorGame-number\">{r}</span></p>\n              <p>g: <span className=\"ColorGame-number\">{g}</span></p>\n              <p>b: <span className=\"ColorGame-number\">{b}</span></p>\n            </span>\n          </div>\n        </div>\n        <div className=\"ColorGame-randomColor\" style={formatColor(randomColor)}><div className=\"ColorGame-centeredText\"><span className=\"ColorGame-text\">Match This Color</span></div></div>\n        <RightArrow className=\"ColorGame-rightArrow\" />\n      </div>\n      {hasReachedMarginOfError && (\n        <span className=\"ColorGame-popupText\">\n          Margin of error: {marginOfError}\n        </span>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}